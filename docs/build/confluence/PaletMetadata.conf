<p>The PaletMetadata module is composed of the PaletMetadata Class and its respective subclasses. The subclassess correspond to high level objects like Enrollment &amp; Eligibility. These classes work to make TAF data more easily readable. Column names within TAF data are assigned more readable values. Additionally, some columns have dictionaries within them that explain what contructed code values correspond to.</p>
<dl>
<dt><em>class </em><code>PaletMetadata.</code><strong><code>PaletMetadata</code></strong></dt>
<dd><p>Bases: <code>object</code></p>
<p>In addition to the readability aspect discussed above, the PaletMetadata class is essential to converting data within the TAF files to the outputs returned by the API. This most often applies to assigning names to structered code or implementing column names that are more concise and easily understandable.</p>
<ac:structured-macro ac:name="info">
<ac:rich-text-body>
<p>It is a best practice to import this class of the PALET library whenever running a high level object in the API.</p>
</ac:rich-text-body>
</ac:structured-macro>
<p style="font-weight: bold; margin-top: 30px">Example</p>
<ac:structured-macro ac:name="code">
<ac:parameter ac:name="language">python</ac:parameter>
<ac:plain-text-body><![CDATA[>>> from palet.PaletMetadata import PaletMetadata]]></ac:plain-text-body>
</ac:structured-macro>
<dl>
<dt><em>class </em><strong><code>Enrollment</code></strong></dt>
<dd><p>Bases: <code>object</code></p>
<p>The Enrollment class is a subclass of PaletMetadata. This class primaryily assigns more readable and concise column names to the TAF data pertaining to Medicaid and CHIP enrollment. Additionally, some of the subclassess within the Enrollment class contain dictionaries that explain the meaning of structed code within columns.</p>
<dl>
<dt><strong><code>fileDate</code></strong><em> = &apos;DE_FIL_DT&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>type</code></strong><em> = &apos;chip_cd_01&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>derived_enrollment_field</code></strong><em> = &apos;enrollment_type&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>chip_cd_mon</code></strong><em> = [&apos;chip_cd_01&apos;, &apos;chip_cd_02&apos;, &apos;chip_cd_03&apos;, &apos;chip_cd_04&apos;, &apos;chip_cd_05&apos;, &apos;chip_cd_06&apos;, &apos;chip_cd_07&apos;, &apos;chip_cd_08&apos;, &apos;chip_cd_09&apos;, &apos;chip_cd_10&apos;, &apos;chip_cd_11&apos;, &apos;chip_cd_12&apos;]</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>chip_cd</code></strong><em> = {&apos;1&apos;: &apos;Title XIX Medicaid&apos;, &apos;2&apos;: &apos;Title XXI M-CHIP&apos;, &apos;3&apos;: &apos;Title XXI S-CHIP&apos;}</em></dt>
<dd></dd>
</dl>
<dl>
<dt><em>class </em><strong><code>identity</code></strong></dt>
<dd><p>Bases: <code>object</code></p>
<p>The Identity class is a subclass within Enrollment. This subclass assigns column names to beneficiary demographic data such as name, date of birth, SSN, etc.</p>
<dl>
<dt><strong><code>mediciadId</code></strong><em> = &apos;msis_ident_num&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>ssn</code></strong><em> = &apos;ssn_num&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>ssnIndicator</code></strong><em> = &apos;ssn_ind&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>ssnPending</code></strong><em> = &apos;ssn_vrfctn_ind&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>medicareId</code></strong><em> = &apos;mdcr_bene_id&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>singleEnrollment</code></strong><em> = &apos;sngl_enrlmt_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>firstName</code></strong><em> = &apos;elgbl_1st_name&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>lastName</code></strong><em> = &apos;elgbl_last_name&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>middleName</code></strong><em> = &apos;elgbl_mdl_initl_name&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>dob</code></strong><em> = &apos;birth_dt&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>dod</code></strong><em> = &apos;death_dt&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>age</code></strong><em> = &apos;age_num&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>ageGroup</code></strong><em> = &apos;age_grp_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>age_band</code></strong><em> = &apos;age_band&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>died</code></strong><em> = &apos;dcsd_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>gender</code></strong><em> = &apos;gndr_cd&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>maritalStatus</code></strong><em> = &apos;mrtl_stus_cd&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>income</code></strong><em> = &apos;incm_cd&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>vet</code></strong><em> = &apos;vet_ind&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>incm_cd</code></strong><em> = {&apos;01&apos;: &apos;1-100% of FPL&apos;, &apos;02&apos;: &apos;101-133% of FPL&apos;, &apos;03&apos;: &apos;134-150% of FPL&apos;, &apos;04&apos;: &apos;151-200% of FPL&apos;, &apos;05&apos;: &apos;201-255% of FPL&apos;, &apos;06&apos;: &apos;256-300% of FPL&apos;, &apos;07&apos;: &apos;301-400% of FPL&apos;, &apos;08&apos;: &apos;&gt;400% of FPL&apos;}</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>age_grp_flag</code></strong><em> = {&apos;1&apos;: &apos;&lt;1&apos;, &apos;10&apos;: &apos;85-125&apos;, &apos;2&apos;: &apos;1-5&apos;, &apos;3&apos;: &apos;6-14&apos;, &apos;4&apos;: &apos;15-18&apos;, &apos;5&apos;: &apos;19-20&apos;, &apos;6&apos;: &apos;21-44&apos;, &apos;7&apos;: &apos;45-64&apos;, &apos;8&apos;: &apos;65-74&apos;, &apos;9&apos;: &apos;75-84&apos;}</em></dt>
<dd></dd>
</dl>
</dd>
</dl>
<dl>
<dt><em>class </em><strong><code>locale</code></strong></dt>
<dd><p>Bases: <code>object</code></p>
<p>The locale class is a subclass within Enrollment. This subclass assigns column names to beneficiary geographic data such as submitting state, city, mailing address, etc.</p>
<dl>
<dt><strong><code>submittingState</code></strong><em> = &apos;SUBMTG_STATE_CD&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>address</code></strong><em> = [&apos;elgbl_line_1_adr_home&apos;, &apos;elgbl_line_2_adr_home&apos;, &apos;elgbl_line_3_adr_home&apos;]</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>city</code></strong><em> = &apos;elgbl_city_name_home&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>zip</code></strong><em> = &apos;elgbl_zip_cd_home&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>county</code></strong><em> = &apos;elgbl_cnty_cd_home&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>state</code></strong><em> = &apos;elgbl_state_cd_home&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>phone</code></strong><em> = &apos;elgbl_phne_num_home&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>region</code></strong><em> = &apos;reg_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>mailAddress</code></strong><em> = [&apos;elgbl_line_1_adr_mail&apos;, &apos;elgbl_line_2_adr_mail&apos;, &apos;elgbl_line_3_adr_mail&apos;]</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>mailCity</code></strong><em> = &apos;elgbl_city_name_mail&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>mailZip</code></strong><em> = &apos;elgbl_zip_cd_mail&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>mailCounty</code></strong><em> = &apos;elgbl_cnty_cd_mail&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>mailState</code></strong><em> = &apos;elgbl_state_cd_mail&apos;</em></dt>
<dd></dd>
</dl>
</dd>
</dl>
<dl>
<dt><em>class </em><strong><code>raceEthnicity</code></strong></dt>
<dd><p>Bases: <code>object</code></p>
<p>The raceEthnicity class is a subclass within Enrollment. This subclass assigns column names to beneficiary race and ethnicity data such as race, ethnicity, Native American certification, etc. This subclass also contains dictionaries explaining the values that correspond to the structed code in the following columns: race_ethncty_flag, race_ethncty_exp_flag, ethncty_cd, and crtfd_amrcn_indn_alskn_ntv_ind.</p>
<dl>
<dt><strong><code>certifiedAmericanIndian</code></strong><em> = &apos;crtfd_amrcn_indn_alskn_ntv_ind&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>ethnicity</code></strong><em> = &apos;ethncty_cd&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>nativeHawaiian</code></strong><em> = &apos;ntv_hi_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>guamanian</code></strong><em> = &apos;guam_chamorro_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>samoan</code></strong><em> = &apos;samoan_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>otherPacificIslander</code></strong><em> = &apos;othr_pac_islndr_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>unknownPacificIslander</code></strong><em> = &apos;unk_pac_islndr_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>asian</code></strong><em> = &apos;asn_indn_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>chinese</code></strong><em> = &apos;chinese_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>filipino</code></strong><em> = &apos;filipino_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>japanese</code></strong><em> = &apos;japanese_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>korean</code></strong><em> = &apos;korean_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>vietmanese</code></strong><em> = &apos;vietnamese_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>otherAsian</code></strong><em> = &apos;othr_asn_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>unknownAsian</code></strong><em> = &apos;unk_asn_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>white</code></strong><em> = &apos;wht_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>black</code></strong><em> = &apos;black_afrcn_amrcn_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>native</code></strong><em> = &apos;aian_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>race</code></strong><em> = &apos;race_ethncty_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>raceExpanded</code></strong><em> = &apos;race_ethncty_exp_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>hispanic</code></strong><em> = &apos;hspnc_ethncty_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>timestampAdd</code></strong><em> = (&apos;rec_add_ts&apos;,)</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>timestampUpdate</code></strong><em> = &apos;rec_updt_ts&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>race_ethncty_flag</code></strong><em> = {&apos;1&apos;: &apos;white&apos;, &apos;2&apos;: &apos;black&apos;, &apos;3&apos;: &apos;asian&apos;, &apos;4&apos;: &apos;americanIndian&apos;, &apos;5&apos;: &apos;islander&apos;, &apos;6&apos;: &apos;mixed&apos;, &apos;7&apos;: &apos;hispanic&apos;}</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>race_ethncty_exp_flag</code></strong><em> = {&apos;1&apos;: &apos;white&apos;, &apos;10&apos;: &apos;otherAsian&apos;, &apos;11&apos;: &apos;unknownAsian&apos;, &apos;12&apos;: &apos;multiAsian&apos;, &apos;13&apos;: &apos;hawaiian&apos;, &apos;14&apos;: &apos;guamChamarro&apos;, &apos;15&apos;: &apos;samoan&apos;, &apos;16&apos;: &apos;otherIslander&apos;, &apos;17&apos;: &apos;unkownIslander&apos;, &apos;18&apos;: &apos;multiIslander&apos;, &apos;19&apos;: &apos;multiRacial&apos;, &apos;2&apos;: &apos;black&apos;, &apos;20&apos;: &apos;hispanic&apos;, &apos;3&apos;: &apos;americanIndian&apos;, &apos;4&apos;: &apos;indian&apos;, &apos;5&apos;: &apos;chinese&apos;, &apos;6&apos;: &apos;filipino&apos;, &apos;7&apos;: &apos;japanese&apos;, &apos;8&apos;: &apos;korean&apos;, &apos;9&apos;: &apos;vietnamese&apos;}</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>ethncty_cd</code></strong><em> = {&apos;0&apos;: &apos;notHispanic&apos;, &apos;1&apos;: &apos;mexican&apos;, &apos;2&apos;: &apos;puertoRican&apos;, &apos;3&apos;: &apos;cuban&apos;, &apos;4&apos;: &apos;otherHispanic&apos;, &apos;5&apos;: &apos;unkownHispanic&apos;, &apos;6&apos;: &apos;unspecified&apos;}</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>crtfd_amrcn_indn_alskn_ntv_ind</code></strong><em> = {&apos;0&apos;: &apos;notAmericanIndian&apos;, &apos;1&apos;: &apos;americanIndian&apos;, &apos;2&apos;: &apos;certifiedAmericanIndian&apos;}</em></dt>
<dd></dd>
</dl>
</dd>
</dl>
<dl>
<dt><em>class </em><strong><code>CHIP</code></strong></dt>
<dd><p>Bases: <code>object</code></p>
<p>The CHIP class is a subclass within Enrollment. This subclass assigns time periods to CHIP enrollment data such as yearly, quarterly, and biannually.</p>
<dl>
<dt><strong><code>yearly</code></strong><em> = &apos;chip_enrlmt_days_yr&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>quarter1</code></strong><em> = [&apos;chip_enrlmt_days_01&apos;, &apos;chip_enrlmt_days_02&apos;, &apos;chip_enrlmt_days_03&apos;]</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>quarter2</code></strong><em> = [&apos;chip_enrlmt_days_04&apos;, &apos;chip_enrlmt_days_05&apos;, &apos;chip_enrlmt_days_06&apos;]</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>quarter3</code></strong><em> = [&apos;chip_enrlmt_days_07&apos;, &apos;chip_enrlmt_days_08&apos;, &apos;chip_enrlmt_days_09&apos;]</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>quarter4</code></strong><em> = [&apos;chip_enrlmt_days_10&apos;, &apos;chip_enrlmt_days_11&apos;, &apos;chip_enrlmt_days_12&apos;]</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>half1</code></strong><em> = [[&apos;chip_enrlmt_days_01&apos;, &apos;chip_enrlmt_days_02&apos;, &apos;chip_enrlmt_days_03&apos;], [&apos;chip_enrlmt_days_04&apos;, &apos;chip_enrlmt_days_05&apos;, &apos;chip_enrlmt_days_06&apos;]]</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>half2</code></strong><em> = [[&apos;chip_enrlmt_days_07&apos;, &apos;chip_enrlmt_days_08&apos;, &apos;chip_enrlmt_days_09&apos;], [&apos;chip_enrlmt_days_10&apos;, &apos;chip_enrlmt_days_11&apos;, &apos;chip_enrlmt_days_12&apos;]]</em></dt>
<dd></dd>
</dl>
<dl>
<dt><em>class </em><strong><code>monthly</code></strong></dt>
<dd><p>Bases: <code>object</code></p>
<p>The Monthly class is a subclass within CHIP. This subclass assigns months to CHIP enrollment data.</p>
<dl>
<dt><strong><code>Jan</code></strong><em> = &apos;chip_enrlmt_days_01&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>Feb</code></strong><em> = &apos;chip_enrlmt_days_02&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>Mar</code></strong><em> = &apos;chip_enrlmt_days_03&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>Apr</code></strong><em> = &apos;chip_enrlmt_days_04&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>May</code></strong><em> = &apos;chip_enrlmt_days_05&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>Jun</code></strong><em> = &apos;chip_enrlmt_days_06&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>Jul</code></strong><em> = &apos;chip_enrlmt_days_07&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>Aug</code></strong><em> = &apos;chip_enrlmt_days_08&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>Sep</code></strong><em> = &apos;chip_enrlmt_days_09&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>Oct</code></strong><em> = &apos;chip_enrlmt_days_10&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>Nov</code></strong><em> = &apos;chip_enrlmt_days_11&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>Dec</code></strong><em> = &apos;chip_enrlmt_days_12&apos;</em></dt>
<dd></dd>
</dl>
</dd>
</dl>
</dd>
</dl>
<dl>
<dt><em>class </em><strong><code>Medicaid</code></strong></dt>
<dd><p>Bases: <code>object</code></p>
<p>The Medicaid class is a subclass within Enrollment. This subclass assigns time periods to CHIP enrollment data such as yearly, quarterly, and biannually.</p>
<dl>
<dt><strong><code>yearly</code></strong><em> = &apos;mdcd_enrlmt_days_yr&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>quarter1</code></strong><em> = [&apos;mdcd_enrlmt_days_01&apos;, &apos;mdcd_enrlmt_days_02&apos;, &apos;mdcd_enrlmt_days_03&apos;]</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>quarter2</code></strong><em> = [&apos;mdcd_enrlmt_days_04&apos;, &apos;mdcd_enrlmt_days_05&apos;, &apos;mdcd_enrlmt_days_06&apos;]</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>quarter3</code></strong><em> = [&apos;mdcd_enrlmt_days_07&apos;, &apos;mdcd_enrlmt_days_08&apos;, &apos;mdcd_enrlmt_days_09&apos;]</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>quarter4</code></strong><em> = [&apos;mdcd_enrlmt_days_10&apos;, &apos;mdcd_enrlmt_days_11&apos;, &apos;mdcd_enrlmt_days_12&apos;]</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>half1</code></strong><em> = [[&apos;mdcd_enrlmt_days_01&apos;, &apos;mdcd_enrlmt_days_02&apos;, &apos;mdcd_enrlmt_days_03&apos;], [&apos;mdcd_enrlmt_days_04&apos;, &apos;mdcd_enrlmt_days_05&apos;, &apos;mdcd_enrlmt_days_06&apos;]]</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>half2</code></strong><em> = [[&apos;mdcd_enrlmt_days_07&apos;, &apos;mdcd_enrlmt_days_08&apos;, &apos;mdcd_enrlmt_days_09&apos;], [&apos;mdcd_enrlmt_days_10&apos;, &apos;mdcd_enrlmt_days_11&apos;, &apos;mdcd_enrlmt_days_12&apos;]]</em></dt>
<dd></dd>
</dl>
<dl>
<dt><em>class </em><strong><code>monthly</code></strong></dt>
<dd><p>Bases: <code>object</code></p>
<p>The Monthly class is a subclass within Medicaid. This subclass assigns months to Medicaid enrollment data.</p>
<dl>
<dt><strong><code>Jan</code></strong><em> = &apos;mdcd_enrlmt_days_01&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>Feb</code></strong><em> = &apos;mdcd_enrlmt_days_02&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>Mar</code></strong><em> = &apos;mdcd_enrlmt_days_03&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>Apr</code></strong><em> = &apos;mdcd_enrlmt_days_04&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>May</code></strong><em> = &apos;mdcd_enrlmt_days_05&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>Jun</code></strong><em> = &apos;mdcd_enrlmt_days_06&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>Jul</code></strong><em> = &apos;mdcd_enrlmt_days_07&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>Aug</code></strong><em> = &apos;mdcd_enrlmt_days_08&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>Sep</code></strong><em> = &apos;mdcd_enrlmt_days_09&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>Oct</code></strong><em> = &apos;mdcd_enrlmt_days_10&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>Nov</code></strong><em> = &apos;mdcd_enrlmt_days_11&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>Dec</code></strong><em> = &apos;mdcd_enrlmt_days_12&apos;</em></dt>
<dd></dd>
</dl>
</dd>
</dl>
</dd>
</dl>
<dl>
<dt><strong><code>claimNumber</code></strong><em> = &apos;mdcr_hicn_num&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>caseNumber</code></strong><em> = &apos;msis_case_num&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>citizenship</code></strong><em> = [&apos;ctznshp_ind&apos;, &apos;ctznshp_vrfctn_ind&apos;]</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>immigrationStatus</code></strong><em> = [&apos;imgrtn_stus_cd&apos;, &apos;imgrtn_vrfctn_ind&apos;, &apos;imgrtn_stus_5_yr_bar_end_dt&apos;]</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>language</code></strong><em> = [&apos;othr_lang_home_cd&apos;, &apos;prmry_lang_flag&apos;, &apos;prmry_lang_englsh_prfcncy_cd&apos;]</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>householdSize</code></strong><em> = &apos;hsehld_size_cd&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>pregnant</code></strong><em> = [&apos;prgnt_ind&apos;, &apos;prgncy_flag&apos;]</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>careLevel</code></strong><em> = &apos;care_lvl_stus_cd&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>deaf</code></strong><em> = &apos;deaf_dsbl_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>blind</code></strong><em> = &apos;blnd_dsbl_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>difficultyConcentrating</code></strong><em> = &apos;dfclty_conc_dsbl_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>difficultyWalking</code></strong><em> = &apos;dfclty_wlkg_dsbl_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>difficultyBathing</code></strong><em> = &apos;dfclty_drsng_bathg_dsbl_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>difficultyErrands</code></strong><em> = &apos;dfclty_errands_aln_dsbl_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>disabilityOther</code></strong><em> = &apos;othr_dsbl_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>enrollmentType</code></strong><em> = &apos;enrl_type_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>eligibleDaysThisMonth</code></strong><em> = &apos;days_elig_in_mo_cnt&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>eligibleThisMonth</code></strong><em> = &apos;elgbl_entir_mo_ind&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>eligibleLastDayThisMonth</code></strong><em> = &apos;elgbl_last_day_of_mo_ind&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>chip</code></strong><em> = &apos;chip_cd&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>scope</code></strong><em> = &apos;rstrctd_bnfts_cd&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>ssdi</code></strong><em> = &apos;ssdi_ind&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>ssi</code></strong><em> = &apos;ssi_ind&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>ssiStateCode</code></strong><em> = &apos;ssi_state_splmt_stus_cd&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>ssiStatus</code></strong><em> = &apos;ssi_stus_cd&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>birthToConception</code></strong><em> = &apos;birth_cncptn_ind&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>temporaryAssistance</code></strong><em> = &apos;tanf_cash_cd&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>healthMdeicalHome</code></strong><em> = &apos;hh_pgm_prtcpnt_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>healthProvider</code></strong><em> = &apos;hh_prvdr_num&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>healthEntity</code></strong><em> = &apos;hh_ent_name&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>malignantHyperthermia</code></strong><em> = &apos;mh_hh_chrnc_cond_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>substanceAbuse</code></strong><em> = &apos;sa_hh_chrnc_cond_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>asthma</code></strong><em> = &apos;asthma_hh_chrnc_cond_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>diabetes</code></strong><em> = &apos;dbts_hh_chrnc_cond_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>heartDisease</code></strong><em> = &apos;hrt_dis_hh_chrnc_cond_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>overweight</code></strong><em> = &apos;ovrwt_hh_chrnc_cond_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>hiv</code></strong><em> = &apos;hiv_aids_hh_chrnc_cond_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>otherChronicConidition</code></strong><em> = &apos;othr_hh_chrnc_cond_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>lockInProvider</code></strong><em> = [&apos;lckin_prvdr_num1&apos;, &apos;lckin_prvdr_num2&apos;, &apos;lckin_prvdr_num3&apos;]</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>lockInProviderType</code></strong><em> = [&apos;lckin_prvdr_type_cd1&apos;, &apos;lckin_prvdr_type_cd2&apos;, &apos;lckin_prvdr_type_cd3&apos;]</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>lockIn</code></strong><em> = &apos;lckin_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>longTermProvider</code></strong><em> = [&apos;ltss_prvdr_num1&apos;, &apos;ltss_prvdr_num2&apos;, &apos;ltss_prvdr_num3&apos;]</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>longTermCareLevel</code></strong><em> = [&apos;ltss_lvl_care_cd1&apos;, &apos;ltss_lvl_care_cd2&apos;, &apos;ltss_lvl_care_cd3&apos;]</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>livesWithFamily</code></strong><em> = &apos;mfp_lvs_wth_fmly_cd&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>qualifiedInstituion</code></strong><em> = &apos;mfp_qlfyd_instn_cd&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>qualifiedResidence</code></strong><em> = &apos;mfp_qlfyd_rsdnc_cd&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>participationEndedReason</code></strong><em> = &apos;mfp_prtcptn_endd_rsn_cd&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>reinstitutionalizedReasonCode</code></strong><em> = &apos;mfp_rinstlzd_rsn_cd&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>moneyFollowsPerson</code></strong><em> = &apos;mfp_prtcpnt_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>cfc</code></strong><em> = &apos;cmnty_1st_chs_spo_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>thirdPartyLiabilityInsurance</code></strong><em> = &apos;tpl_insrnc_cvrg_ind&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>thirdPartyLiabilityOther</code></strong><em> = &apos;tpl_othr_cvrg_ind&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>enrollmentIntervals</code></strong><em> = &apos;medicaid_enrollment_intervals&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>CHIPIntervals</code></strong><em> = &apos;chip_enrollment_intervals&apos;</em></dt>
<dd></dd>
</dl>
</dd>
</dl>
<dl>
<dt><em>class </em><strong><code>Eligibility</code></strong></dt>
<dd><p>Bases: <code>object</code></p>
<p>The Eiligibility class is a subclass of PaletMetadata. This class primaryily assigns more readable and concise column names to the TAF data pertaining to Medicaid and CHIP eligibility.</p>
<ac:structured-macro ac:name="info">
<ac:rich-text-body>
<p>Incomplete, work in progress.</p>
</ac:rich-text-body>
</ac:structured-macro>
<dl>
<dt><strong><code>fileDate</code></strong><em> = &apos;DE_FIL_DT&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>eligibiltyGroup</code></strong><em> = &apos;elgblty_grp_cd&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>primaryEligibilityGroup</code></strong><em> = &apos;prmry_elgblty_grp_ind&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>eligibiltyGroupCategory</code></strong><em> = &apos;elgblty_grp_ctgry_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>maintenanceAssistanceStatus</code></strong><em> = &apos;mas_cd&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>eligibilityBasis</code></strong><em> = &apos;elgblty_mdcd_basis_cd&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>masEligibilityBasis</code></strong><em> = &apos;masboe_cd&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>stateEligibility</code></strong><em> = &apos;state_spec_elgblty_fctr_txt&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>dualEligibilityCode</code></strong><em> = &apos;dual_elgbl_cd&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>dualEligibility</code></strong><em> = &apos;dual_elgbl_flag&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>notEnrolled</code></strong><em> = &apos;mdcd_not_enrolled&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>eligibility_cd</code></strong><em> = {&apos;01&apos;: &apos;Parents &amp; Other Caretaker Relatives&apos;, &apos;02&apos;: &apos;Transitional Medical Assistance&apos;, &apos;03&apos;: &apos;Extended Medicaid due to Earnings&apos;, &apos;04&apos;: &apos;Extended Medicaid due to Spousal Support Collections&apos;, &apos;05&apos;: &apos;Pregnant Women&apos;, &apos;06&apos;: &apos;Deemed Newborns&apos;, &apos;07&apos;: &apos;Infants &amp; Children under Age 19&apos;, &apos;08&apos;: &apos;Children w/ Title IV-E Adoption Asst, Foster or Guardianship Care&apos;, &apos;09&apos;: &apos;Former Foster Care Children&apos;, &apos;11&apos;: &apos;Indvl Receiving SSI&apos;, &apos;12&apos;: &apos;Aged, Blind &amp; Disabled Indvl in 209(b) States&apos;, &apos;13&apos;: &apos;Indvl Receiving M&amp;atory State Supplements&apos;, &apos;14&apos;: &apos;Indvl Who Are Essential Spouses&apos;, &apos;15&apos;: &apos;Institutionalized Indvl Continuously Eligible Since 1973&apos;, &apos;16&apos;: &apos;Blind or Disabled Indvl Eligible 1973&apos;, &apos;17&apos;: &apos;Indvl Who Lost Eligibility for SSI/SSP Due to Incr. OASDI Benefits in 1972&apos;, &apos;18&apos;: &apos;Indvl Who Would be Eligible SSI/SSP but for OASDI COLA incr. since April, 1977&apos;, &apos;19&apos;: &apos;Disabled Widows &amp; Widowers Ineligible for SSI due to Increase in OASDI&apos;, &apos;20&apos;: &apos;Disabled Widows &amp; Widowers Ineligible for SSI due to Early Rcpt of Social Security&apos;, &apos;21&apos;: &apos;Working Disabled under 1619(b)&apos;, &apos;22&apos;: &apos;Disabled Adult Children&apos;, &apos;23&apos;: &apos;Qualified Medicare Beneficiaries&apos;, &apos;24&apos;: &apos;Qualified Disabled &amp; Working Indvl&apos;, &apos;25&apos;: &apos;Specified Low Income Medicare Beneficiaries&apos;, &apos;26&apos;: &apos;Qualifying Indvl&apos;, &apos;27&apos;: &apos;Optional Coverage of Parents &amp; Other Caretaker Relatives&apos;, &apos;28&apos;: &apos;Reasonable Classifications of Indvl under Age 21&apos;, &apos;29&apos;: &apos;Children w/ Non-IV-E Adoption Assistance&apos;, &apos;30&apos;: &apos;Independent Foster Care Adolescents&apos;, &apos;31&apos;: &apos;Optional Targeted Low Income Children&apos;, &apos;32&apos;: &apos;Indvl Electing COBRA Continuation Coverage&apos;, &apos;33&apos;: &apos;Indvl above 133% FPL under Age 65&apos;, &apos;34&apos;: &apos;Certain Indvl Needing Treatment for Breast or Cervical Cancer&apos;, &apos;35&apos;: &apos;Indvl Eligible for Family Planning Services&apos;, &apos;36&apos;: &apos;Indvl w/ Tuberculosis&apos;, &apos;37&apos;: &apos;Aged, Blind or Dsbld Indiv. Eligible for but Not Receiving Cash Asst&apos;, &apos;38&apos;: &apos;Indvl Eligible for Cash Assistance except for Institutionalization&apos;, &apos;39&apos;: &apos;Indvl Receiving Home &amp; Community Based Services under Institutional Rules&apos;, &apos;40&apos;: &apos;Optional State Suppl Recipients - 1634 States, &amp; SSI Criteria States w/ 1616 Agremts&apos;, &apos;41&apos;: &apos;Optional State Suppl Recipients - 209(b) States, &amp; SSI Criteria States w/out 1616 Agreements&apos;, &apos;42&apos;: &apos;Institutionalized Indvl Eligible under a Special Income Level&apos;, &apos;43&apos;: &apos;Indvl participating in a PACE Program under Institutional Rules&apos;, &apos;44&apos;: &apos;Indvl Receiving Hospice Care&apos;, &apos;45&apos;: &apos;Qualified Disabled Children under Age 19&apos;, &apos;46&apos;: &apos;Poverty Level Aged or Disabled&apos;, &apos;47&apos;: &apos;Work Incentives Eligibility Group&apos;, &apos;48&apos;: &apos;Ticket to Work Basic Group&apos;, &apos;49&apos;: &apos;Ticket to Work Medical Improvements Group&apos;, &apos;50&apos;: &apos;Family Opportunity Act Children w/ Disabilities&apos;, &apos;51&apos;: &apos;Indvl Eligible for Home &amp; Community-Based Services&apos;, &apos;52&apos;: &apos;Indvl Eligible for Home &amp; Community-Based Services - Special Income Level&apos;, &apos;53&apos;: &apos;Medically Needy Pregnant Women&apos;, &apos;54&apos;: &apos;Medically Needy Children under Age 18&apos;, &apos;55&apos;: &apos;Medically Needy Children Age 18 Through 20&apos;, &apos;56&apos;: &apos;Medically Needy Parents &amp; Other Caretakers&apos;, &apos;59&apos;: &apos;Medically Needy Aged, Blind or Disabled&apos;, &apos;60&apos;: &apos;Medically Needy Blind or Disabled Indvl Eligible 1973&apos;, &apos;61&apos;: &apos;Targeted Low-Income Children&apos;, &apos;62&apos;: &apos;Deemed Newborn&apos;, &apos;63&apos;: &apos;Children Ineligible for Medicaid Due to Loss of Income Disregards&apos;, &apos;64&apos;: &apos;Coverage from Conception to Birth&apos;, &apos;65&apos;: &apos;Children w/ Access to Public Employee Coverage&apos;, &apos;66&apos;: &apos;Children Eligible for Dental Only Supplemental Coverage&apos;, &apos;67&apos;: &apos;Targeted Low-Income Pregnant Women&apos;, &apos;68&apos;: &apos;Pregnant Women w/ Access to Public Employee Coverage&apos;, &apos;69&apos;: &apos;Indvl w/ Mental Health Conditions (expansion group)&apos;, &apos;70&apos;: &apos;Family Planning Participants (expansion group)&apos;, &apos;71&apos;: &apos;Other expansion group&apos;, &apos;72&apos;: &apos;Adult Group - Indvl &lt;= 133% FPL Age 19 - 64, newly elgbl for all states&apos;, &apos;73&apos;: &apos;Adult Group - Indvl &lt;= 133% FPL Age 19 - 64, not newly elgbl for non 1905z(3) states&apos;, &apos;74&apos;: &apos;Adult Group - Indvl &lt;= 133% FPL Age 19 - 64, not newly elgbl parent/caretaker-relative(s) in 1905z(3) states&apos;, &apos;75&apos;: &apos;Adult Group - Indvl &lt;= 133% FPL Age 19 - 64, not newly elgbl non-parent/caretaker-relative(s) in 1905z(3) states&apos;, &apos;76&apos;: &apos;Uninsured Individual eligible for COVID-19 testing&apos;}</em></dt>
<dd></dd>
</dl>
</dd>
</dl>
<dl>
<dt><em>class </em><strong><code>Coverage</code></strong></dt>
<dd><p>Bases: <code>object</code></p>
<p>The Coverage class is a subclass of PaletMetadata. This class primaryily assigns more readable and concise column names to the TAF data pertaining to Medicaid and CHIP coverage.</p>
<ac:structured-macro ac:name="info">
<ac:rich-text-body>
<p>Incomplete, work in progress.</p>
</ac:rich-text-body>
</ac:structured-macro>
<dl>
<dt><strong><code>fileDate</code></strong><em> = &apos;DE_FIL_DT&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>mc_plan_type_cd</code></strong><em> = &apos;coverage_type&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>type</code></strong><em> = &apos;coverage_type&apos;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>coverage_type</code></strong><em> = {&apos;01&apos;: &apos;Comprehensive Managed Care Organization&apos;, &apos;02&apos;: &apos;Traditional PCCM Provider arrangement&apos;, &apos;03&apos;: &apos;Enhanced PCCM Provider arrangement&apos;, &apos;04&apos;: &apos;Health Insuring Organization (HIO)&apos;, &apos;05&apos;: &apos;Medical-Only PIHP&apos;, &apos;06&apos;: &apos;Medical-Only PAHP&apos;, &apos;07&apos;: &apos;Long-Term Services &amp; Supports (LTSS) PIHP&apos;, &apos;08&apos;: &apos;Mental Health (MH) PIHP&apos;, &apos;09&apos;: &apos;Mental Health (MH) PAHP&apos;, &apos;10&apos;: &apos;(SUD) PIHP&apos;, &apos;11&apos;: &apos;Substance Use Disorders (SUD) PAHP&apos;, &apos;12&apos;: &apos;Mental Health (MH) and (SUD) PIHP&apos;, &apos;13&apos;: &apos;Mental Health (MH) and (SUD) PAHP&apos;, &apos;14&apos;: &apos;Dental PAHP&apos;, &apos;15&apos;: &apos;Transportation PAHP&apos;, &apos;16&apos;: &apos;Disease Management PAHP&apos;, &apos;17&apos;: &apos;Prog All-Inclusive Care for the Elderly (PACE)&apos;, &apos;18&apos;: &apos;Pharmacy PAHP&apos;, &apos;19&apos;: &apos;LT Services &amp; Supports (LTSS) and (MH) PIHP&apos;, &apos;20&apos;: &apos;Other&apos;, &apos;60&apos;: &apos;Accountable Care Organization&apos;, &apos;70&apos;: &apos;Health/Medical Home (retired value)&apos;, &apos;80&apos;: &apos;Integrated Care for Dual Eligibles&apos;}</em></dt>
<dd></dd>
</dl>
</dd>
</dl>
<dl>
<dt><em>class </em><strong><code>Enrichment</code></strong></dt>
<dd><p>Bases: <code>object</code></p>
<dl>
<dt><em>class </em><strong><code>Palet</code></strong>(<em><em>report_month</em>: <em>str</em></em>, <em><em>start_month</em>: <em>Optional[str]</em> = None</em>, <em><em>end_month</em>: <em>Optional[str]</em> = None</em>, <em><em>run_id</em>: <em>Optional[str]</em> = None</em>)</dt>
<dd><p>Bases: <code>object</code></p>
<p>The class responsible initialization, logging and utilities. This class is critical to utilizing the PALET library. It initializes the API, logs data, and provides access to the Utils subclass.</p>
<p style="font-weight: bold; margin-top: 30px">Example</p>
<p>from palet.Palet import Palet</p>
<ac:structured-macro ac:name="info">
<ac:rich-text-body>
<p>This class is inherited from the Paletable, which is inherited from all high level objecsts. As such this class does not need to be manually imported.</p>
</ac:rich-text-body>
</ac:structured-macro>
<dl>
<dt><strong><code>PERFORMANCE</code></strong><em> = 15</em></dt>
<dd></dd>
</dl>
<dl>
<dt><em>class </em><strong><code>Utils</code></strong></dt>
<dd><p>Bases: <code>object</code></p>
<p>Sub-class within the Palet class containing utilities. The Utils subclass features static methods that can be used by CMS analysts.</p>
<dl>
<dt><em>static </em><strong><code>compress</code></strong>(<em><em>string</em></em>)</dt>
<dd><p>Static method to compress a string</p>
<table>
<tbody>
<tr>
<td style="border: none"><strong>Parameters:</strong></td>
<td style="border: none"><p><strong>string</strong> – <em>str</em>: The string a user wishes to compress</p>
</td>
</tr>
<tr>
<td style="border: none"><strong>Returns:</strong></td>
<td style="border: none"><p>A compressed string</p>
</td>
</tr>
</tbody>
</table>
</dd>
</dl>
<dl>
<dt><em>static </em><strong><code>createDateRange</code></strong>(<em><em>year</em>: <em>str</em></em>)</dt>
<dd><p>Static method for creating a data range when viewing data.</p>
<table>
<tbody>
<tr>
<td style="border: none"><strong>Parameters:</strong></td>
<td style="border: none"><p><strong>year</strong> – <em>str</em>: The year an analyst wants to view data for.</p>
</td>
</tr>
<tr>
<td style="border: none"><strong>Returns:</strong></td>
<td style="border: none"><p>Data from the all 12 months of the specified year.</p>
</td>
</tr>
</tbody>
</table>
</dd>
</dl>
<dl>
<dt><em>static </em><strong><code>propertiesOf</code></strong>(<em><em>Obj</em>: <em>Any</em></em>)</dt>
<dd></dd>
</dl>
<dl>
<dt><em>static </em><strong><code>show</code></strong>(<em><em>sql</em></em>)</dt>
<dd><p>Static method allowing the analyst to return the sql functions being run by the palet library.</p>
<table>
<tbody>
<tr>
<td style="border: none"><strong>Parameters:</strong></td>
<td style="border: none"><p><strong>sql</strong> – <em>str</em>: The SQL function an analyst is utilizing when logging.</p>
</td>
</tr>
<tr>
<td style="border: none"><strong>Returns:</strong></td>
<td style="border: none"><p>Prints the SQL query an analyst is using for logging purposes.</p>
</td>
</tr>
</tbody>
</table>
</dd>
</dl>
</dd>
</dl>
<dl>
<dt><strong><code>cache_run_ids</code></strong>()</dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>initialize_logger</code></strong>(<em><em>now</em>: <em>datetime.datetime</em></em>)</dt>
<dd><p>Attribute that initializes the logger within the Palet class. Prints a datetime so it is clear to the user when the code was executed. Logging contains multiple levels: INFO, DEBUG, WARNING,ERROR and TRACE.</p>
<table>
<tbody>
<tr>
<td style="border: none"><strong>Parameters:</strong></td>
<td style="border: none"><p><strong>now</strong> – <em>datetime, optional</em>: Filter a date and time. Can be set but shouldn’t. Defaults to when a log line is written.</p>
</td>
</tr>
<tr>
<td style="border: none"><strong>Returns:</strong></td>
<td style="border: none"><p>Prints a datetime to show when the code was executed.</p>
</td>
</tr>
</tbody>
</table>
</dd>
</dl>
<dl>
<dt><strong><code>load_metadata_file</code></strong>(<em><em>fn</em></em>)</dt>
<dd><p>Attribute for loading in Pickle metadata files sourced from Excel.</p>
<table>
<tbody>
<tr>
<td style="border: none"><strong>Parameters:</strong></td>
<td style="border: none"><p><strong>fn</strong> – <em>str</em>: The name of the pkl file without the extension</p>
</td>
</tr>
<tr>
<td style="border: none"><strong>Returns:</strong></td>
<td style="border: none"><p>PDF file with the metadata from the specified pkl file.</p>
</td>
</tr>
</tbody>
</table>
</dd>
</dl>
<dl>
<dt><strong><code>show</code></strong>(<em><em>v</em></em>)</dt>
<dd><p>To be Determined.</p>
</dd>
</dl>
</dd>
</dl>
<dl>
<dt><strong><code>pd</code></strong><em> = &lt;module &apos;pandas&apos; from &apos;C:\\Projects\\palet\\.venv\\lib\\site-packages\\pandas\\__init__.py&apos;&gt;</em></dt>
<dd></dd>
</dl>
<dl>
<dt><strong><code>getDefinedColumns</code></strong>()</dt>
<dd></dd>
</dl>
</dd>
</dl>
</dd>
</dl>
